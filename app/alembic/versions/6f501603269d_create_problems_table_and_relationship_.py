"""create problems table and relationship with config items

Revision ID: 6f501603269d
Revises: 33ae56e041c2
Create Date: 2025-10-05 16:50:59.533186

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '6f501603269d'
down_revision = '33ae56e041c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('problemas',
    sa.Column('titulo', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=True),
    sa.Column('estado', sa.Enum('EN_ANALISIS', 'DETECTADO', 'RESUELTO', 'CERRADO', name='estadoproblema'), nullable=False),
    sa.Column('responsable_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['responsable_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # As we are using the same enum type that was created, if this is inside `create_table` it will try to 
    # create it again, giving an error. Adding the column right after solves the problem
    # maintaining the revisions database agnostic.
    op.add_column("problemas",
        sa.Column('prioridad', sa.Enum(name='prioridad'), nullable=False),
    )
    op.create_table('problema_item_link',
    sa.Column('id_problema', sa.Uuid(), nullable=False),
    sa.Column('id_config_item', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['id_config_item'], ['items_configuracion.id'], ),
    sa.ForeignKeyConstraint(['id_problema'], ['problemas.id'], ),
    sa.PrimaryKeyConstraint('id_problema', 'id_config_item')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('problema_item_link')
    op.drop_table('problemas')
    sa.Enum(name="estadoproblema").drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
